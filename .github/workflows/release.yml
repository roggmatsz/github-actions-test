name: Release

on: 
  pull_request_target:
    types: [closed]
    branches:
      - main

permissions:
    contents: write

jobs:
  bump-version-and-tag:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - uses: actions/checkout@v3
        with: 
          fetch-depth: 0
      - name: Bump version
        id: bump_version
        run: |
          python bump_version.py
          echo "::set-output name=new_version::$(cat version.txt)"
        
      - name: Create tag
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const newVersion = 'v' + '${{ steps.bump_version.outputs.new_version }}'; // Correct way
            console.log(`Tagging version ${newVersion}`);
            await github.rest.git.createTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag: newVersion,
              message: `Release ${newVersion}`,
              object: {
                sha: context.payload.pull_request.merge_commit_sha || context.payload.head.sha,
                type: 'commit'
              }
            });
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/heads/release/${newVersion}`,
              sha: context.payload.pull_request.merge_commit_sha || context.payload.head.sha
            })
      - name: Update setup.py
        run: |
          sed -i "s/version='.*'/version='${{ steps.bump_version.outputs.new_version }}'/g" setup.py
        
      - name: Commit setup.py changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Updated version in setup.py to ${{ steps.bump_version.outputs.new_version }}"
          file_pattern: setup.py